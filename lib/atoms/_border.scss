/* BORDER */

.bdcl-c { border-collapse: collapse; }
.bdcl-s { border-collapse: separate; }

/* border: none */

.bd-n {  border:        none; }
.bdt-n { border-top:    none; }
.bdr-n { border-right:  none; }
.bdb-n { border-bottom: none; }
.bdl-n { border-left:   none; }

/* border styles */

.bds-h {      border-style: hidden; }
.bds-dt {     border-style: dotted; }
.bds-ds {     border-style: dashed; }
.bds-db {     border-style: double; }
.bds-dtds {   border-style: dot-dash; }
.bds-dtdtds { border-style: dot-dot-dash; }
.bds-w {      border-style: wave; }
.bds-g {      border-style: groove; }
.bds-r {      border-style: ridge; }
.bds-i {      border-style: inset; }
.bds-o {      border-style: outset; }

/* generated border styles */

@mixin atomic-border-style-set($border-style) {
    .bds-#{$border-style} {  border-style:        $border-style; }
    .bdts-#{$border-style} { border-top-style:    $border-style; }
    .bdrs-#{$border-style} { border-right-style:  $border-style; }
    .bdbs-#{$border-style} { border-bottom-style: $border-style; }
    .bdls-#{$border-style} { border-left-style:   $border-style; }
}

$border-styles: none, solid;

@each $border-style in $border-styles {
    @include atomic-border-style-set($border-style);
}

/* generated border widths */

@mixin atomic-border-width-set($edge-width) {
    @if $edge-width == 0 {
        .bdw-#{$edge-width} {  border-width:        #{$edge-width}; }
        .bdtw-#{$edge-width} { border-top-width:    #{$edge-width}; }
        .bdrw-#{$edge-width} { border-right-width:  #{$edge-width}; }
        .bdbw-#{$edge-width} { border-bottom-width: #{$edge-width}; }
        .bdlw-#{$edge-width} { border-left-width:   #{$edge-width}; }
    } @else {
        .bdw-#{$edge-width} {  border-width:        #{$edge-width}px; }
        .bdtw-#{$edge-width} { border-top-width:    #{$edge-width}px; }
        .bdrw-#{$edge-width} { border-right-width:  #{$edge-width}px; }
        .bdbw-#{$edge-width} { border-bottom-width: #{$edge-width}px; }
        .bdlw-#{$edge-width} { border-left-width:   #{$edge-width}px; }
    }
}

@for $edge-width from 0 through 4 {
    @include atomic-border-width-set($edge-width);
}

/* border colors based on global colors map */

@mixin atomic-border-color-set($color-name, $color-hex) {
    @if map-get($config, generate-border-color-shades) and map-has-key($colors, $color-name) {
        .bdc-#{$color-name}-lt {  border-color:        lighten($color-hex, 5%); }
        .bdtc-#{$color-name}-lt { border-top-color:    lighten($color-hex, 5%); }
        .bdrc-#{$color-name}-lt { border-right-color:  lighten($color-hex, 5%); }
        .bdbc-#{$color-name}-lt { border-bottom-color: lighten($color-hex, 5%); }
        .bdlc-#{$color-name}-lt { border-left-color:   lighten($color-hex, 5%); }
    }

    .bdc-#{$color-name} {  border-color:        $color-hex; }
    .bdtc-#{$color-name} { border-top-color:    $color-hex; }
    .bdrc-#{$color-name} { border-right-color:  $color-hex; }
    .bdbc-#{$color-name} { border-bottom-color: $color-hex; }
    .bdlc-#{$color-name} { border-left-color:   $color-hex; }

    @if map-get($config, generate-border-color-shades) and map-has-key($colors, $color-name) {
        .bdc-#{$color-name}-dk {  border-color:        darken($color-hex, 5%); }
        .bdtc-#{$color-name}-dk { border-top-color:    darken($color-hex, 5%); }
        .bdrc-#{$color-name}-dk { border-right-color:  darken($color-hex, 5%); }
        .bdbc-#{$color-name}-dk { border-bottom-color: darken($color-hex, 5%); }
        .bdlc-#{$color-name}-dk { border-left-color:   darken($color-hex, 5%); }
    }
}

@if map-get($config, generate-border-colors) {
    @each $color-name, $color-hex in $colors {
        @include atomic-border-color-set($color-name, $color-hex);
    }
}

@include atomic-border-color-set("t", transparent);
@include atomic-border-color-set("w", white);
@include atomic-border-color-set("b", black);

/* border-radius generation */

@mixin atomic-border-radius-set($radius-value) {
    .bdrds-#{$radius-value} {
        border-radius: #{$radius-value}px;
        background-clip: padding-box;
    }

    .bdtrrds-#{$radius-value} {
        border-top-right-radius: #{$radius-value}px;
        background-clip: padding-box;
    }
    .bdtlrds-#{$radius-value} {
        border-top-left-radius: #{$radius-value}px;
        background-clip: padding-box;
    }
    .bdbrrds-#{$radius-value} {
        border-bottom-right-radius: #{$radius-value}px;
        background-clip: padding-box;
    }
    .bdblrds-#{$radius-value} {
        border-bottom-left-radius: #{$radius-value}px;
        background-clip: padding-box;
    }
}

@for $radius-value from 2 through 6 {
    @include atomic-border-radius-set($radius-value);
}