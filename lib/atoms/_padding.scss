/* PADDING */

/* standard paddings, independent of device */

@mixin atomic-padding-set-standard($suffix, $padding) {
    .p-#{$suffix} {  padding:        $padding; }
    .pt-#{$suffix} { padding-top:    $padding; }
    .pr-#{$suffix} { padding-right:  $padding; }
    .pb-#{$suffix} { padding-bottom: $padding; }
    .pl-#{$suffix} { padding-left:   $padding; }
}

@include atomic-padding-set-standard("0", 0);
@include atomic-padding-set-standard("a", auto);

@each $size-suffix, $size-value in map-get($spacing-units, standard) {
    @include atomic-padding-set-standard($size-suffix, $size-value);
}

/* device-specific paddings */

@mixin atomic-padding-set-device($suffix, $device, $padding) {
    .p-#{$suffix}-#{$device} {  padding:        $padding; }
    .pt-#{$suffix}-#{$device} { padding-top:    $padding; }
    .pr-#{$suffix}-#{$device} { padding-right:  $padding; }
    .pb-#{$suffix}-#{$device} { padding-bottom: $padding; }
    .pl-#{$suffix}-#{$device} { padding-left:   $padding; }
}

/* mobile */

@include atomic-padding-set-device("0", "mobile", 0);
@include atomic-padding-set-device("a", "mobile", auto);

@each $size-suffix, $size-value in map-get($spacing-units, mobile) {
    @include atomic-padding-set-device($size-suffix, "mobile", $size-value);
}

/* tablet */

@media (min-width: map-get($breakpoints, tablet)) {
    @include atomic-padding-set-device("0", "tablet", 0);
    @include atomic-padding-set-device("a", "tablet", auto);

    @each $size-suffix, $size-value in map-get($spacing-units, tablet) {
        @include atomic-padding-set-device($size-suffix, "tablet", $size-value);
    }
}

/* desktop */

@media (min-width: map-get($breakpoints, desktop)) {
    @include atomic-padding-set-device("0", "desktop", 0);
    @include atomic-padding-set-device("a", "desktop", auto);

    @each $size-suffix, $size-value in map-get($spacing-units, desktop) {
        @include atomic-padding-set-device($size-suffix, "desktop", $size-value);
    }
}